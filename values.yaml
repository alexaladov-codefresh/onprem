global:
#### Depending on git provider use matching values
### for Gitlab git provider
#  gitlabClientID: 
#  gitlabClientSecret:
### for Bitbucket git provider
#  bitbucketClientID: 
#  bitbucketClientSecret:
### for Github git provider
  githubClientID: 
  githubClientSecret: 
#  githubInternalToken:
  appProtocol: https
### Codefresh App domain name
  appUrl: cf-cd.com

### Firebase secret
firebaseSecret: 

### Uncomment if kubernetes cluster is RBAC enabled
rbacEnable: true

ingress:
### Codefresh App domain name    
  domain: cf-cd.com
### Uncomment if kubernetes cluster is RBAC enabled
  rbacEnable: true
### The name of kebernetes secret with customer certificate and private key
  webTlsSecretName: "star.codefresh.io"  

### For github provider (the apiHost and loginHost are different)
cfapi:
  github:
    apiHost: api.github.com
    loginHost: github.com
    protocol: https

### For gitlab provider (the apiHost and loginHost are the same)
#cfapi:
#  gitlab:
#    apiHost: gitlab-internal.codefresh.io
#    loginHost: gitlab-internal.codefresh.io
#    protocol: https

### Define kubernetes secret name for customer certificate and private key
webTLS:
  secretName: star.codefresh.io


consul:
### If needed to use storage class that different from default
  StorageClass: managed-premium
### Use NodeSelector to assing pod to a node
  nodeSelector:
    services: consul-postgresql

postgresql:
  persistence:
    storageClass: managed-premium
  nodeSelector:
    services: consul-postgresql

mongodb:
  persistence:
    storageClass: managed-premium
  nodeSelector:
    provisioner: local-volume

redis:
  persistence:
    storageClass: managed-premium
  nodeSelector:
    provisioner: local-volume

rabbitmq:
  persistence:
    storageClass: managed-premium
  nodeSelector:
    services: rabbitmq-registry

registry:
  storageClass: managed-premium
  nodeSelector:
    services: rabbitmq-registry

hermes:
  nodeSelector:
    services: rabbitmq-registry
  redis:
    nodeSelector:
      services: rabbitmq-registry
    persistence:
      storageClass: managed-premium

cronus:
  storageClass: managed-premium
  nodeSelector:
    services: rabbitmq-registry

      
    